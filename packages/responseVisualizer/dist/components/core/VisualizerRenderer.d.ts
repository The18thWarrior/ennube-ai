import React from 'react';
import { VisualizerProps, ComponentConfig } from '../../types';
/**
 * Individual component renderer
 */
export declare const ComponentRenderer: React.FC<{
    config: ComponentConfig;
    components: Record<string, React.ComponentType<any> | string>;
    handlers: Record<string, Function>;
    dataProviders: Record<string, Function>;
    onError: (error: Error) => void;
}>;
/**
 * Main visualizer renderer component
 */
export declare const VisualizerRenderer: React.FC<VisualizerProps>;
/**
 * OVERVIEW
 *
 * Main renderer for visualization configurations generated by LLMs.
 * Provides safe component rendering with validation and error handling.
 * Supports custom component registration and event handler binding.
 * Includes loading states and conditional rendering capabilities.
 *
 * Key Features:
 * - Component validation and sanitization
 * - Custom component registry support
 * - Event handler binding
 * - Data source integration
 * - Loading state management
 * - Error boundary functionality
 *
 * Future Improvements:
 * - Advanced condition evaluation
 * - Real-time data streaming
 * - Performance optimizations with virtualization
 */
//# sourceMappingURL=VisualizerRenderer.d.ts.map